{
  "name": "jkpgcity_backend",
  "version": "1.0.0",
  "description": "webdev project in school",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "npm run start:docker && npm run start:node",
    "devDown": "npm run dev:stop",
    "deployment": "npm run registry:tagAndPush && npm run K8S:deployment:launch",
    "deploymentBuild": "npm run docker:jkpg:build",
    "deploymentDown": "npm run K8S:remove && npm run docker:jkpg:down",
    "setup1": "npm run registry:create && npm run registry:run && npm run docker:deployment",
    "setup2": "",
    "dev:stop": "docker-compose -f compose.dev.yaml down --volumes",
    "start:docker": "docker-compose -f compose.dev.yaml up -d --build",
    "start:node": "nodemon index.js",
    "stop:docker": "docker-compose -f compose.dev.yaml down --volumes",
    "registry:create": "docker-compose -f compose.reg.yaml build",
    "registry:run": "docker-compose -f compose.reg.yaml up -d",
    "registry:remove": "docker-compose -f compose.reg.yaml down --volumes",
    "registry": "docker run -d -p 5000:5000 --name registry registry",
    "registry:tagAndPush": "npm run registry:tag && npm run registry:push",
    "registry:tag": "docker tag jkpg-app:latest localhost:5000/jkpg-app:latest",
    "registry:push": "docker push localhost:5000/jkpg-app:latest",
    "registry:pull": "docker pull localhost:5000/jkpg-app:latest",
    "K8S:deployment:launch": "npm run K8S:namespace &&  npm run K8S:deployment:mongo && npm run K8S:deployment && npm run K8S:service && npm run K8S:ingress",
    "K8S:deployment:mongo": "npm run K8S:deploymentMongo && npm run K8S:serviceMongo",
    "K8S:service": "kubectl apply -f config/k8s/service.yaml",
    "K8S:ingress": "kubectl apply -f config/k8s/ingress.yaml",
    "K8S:namespace": "kubectl apply -f config/k8s/namespace.yaml",
    "K8S:deployment": "kubectl apply -f config/k8s/deployment.yaml",
    "K8S:deploymentMongo": "kubectl apply -f config/k8s/mongoDeployment.yaml",
    "K8S:serviceMongo": "kubectl apply -f config/k8s/mongoService.yaml",
    "K8s:restart": "kubectl rollout restart deployment/jkpg-deployment -n jkpg-city-replica",
    "K8S:proxy": "kubectl proxy",
    "minikube:start": "minikube start",
    "minikube:dashboard": "minikube dashboard",
    "K8S:restart1": "npm run kubectl rollout restart deployment jkpg-city-replica-deployment -n jkpg-city-replica",
    "K8S:restart2": "npm run kubectl rollout restart deployment mongodb-deployment -n jkpg-city-replica",
    "K8S:restart3": "npm run kubectl rollout restart service jkpg-service -n jkpg-city-replica",
    "K8S:restart4": "npm run kubectl rollout restart service mongodb-service -n jkpg-city-replica",
    "K8S:remove": "kubectl delete all --all -n jkpg-city-replica && kubectl delete namespace jkpg-city-replica",
    "docker:jkpg:up": "docker-compose -f compose.deployment.yaml up -d",
    "docker:jkpg:down": "docker-compose -f compose.deployment.yaml down --volumes",
    "docker:jkpg:build": "docker-compose -f compose.deployment.yaml build",
    "docker:deployment": "npm run docker:jkpg:build && npm run docker:jkpg:up",
    "docker:deployment:down": "npm run docker:jkpg:down",
    "K8S:setup": "robins l√•nga command mes skip knapp",
    "K8S:setup1": "kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml",
    "K8S:setup3": "kubectl delete clusterrolebinding serviceaccount-cluster-admin",
    "K8S:setup4": "kubectl create clusterrolebinding serviceaccount-cluster-admin --clusterrole=cluster-admin --user=system:serviceaccount:kubernetes-dashboard:kubernetes-dashboard"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "axios": "^1.6.7",
    "bcrypt": "^5.1.1",
    "cookie-parser": "^1.4.6",
    "dotenv": "^16.4.4",
    "express": "^4.18.2",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "mongoose": "^8.1.2",
    "nodemon": "^3.0.3",
    "validator": "^13.11.0"
  },
  "devDependencies": {
    "eslint": "^8.56.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-n": "^16.6.2",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-vue": "^9.21.1"
  }
}